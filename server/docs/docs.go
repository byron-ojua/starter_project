// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Byron Ojua-Nice",
            "url": "https://github.com/byron-ojua",
            "email": "byron.n@air-weigh.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/clients": {
            "get": {
                "description": "Get all clients and the number of vehicles they have",
                "tags": [
                    "clients"
                ],
                "summary": "Get all clients",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.ClientWithVehicles"
                            }
                        }
                    }
                }
            }
        },
        "/clients/{id}": {
            "get": {
                "description": "Get a client by their ID and the number of vehicles they have",
                "tags": [
                    "clients"
                ],
                "summary": "Get a client by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Client ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.ClientWithVehicles"
                        }
                    }
                }
            }
        },
        "/vehicles/{id}": {
            "get": {
                "description": "Get a vehicle by its ID and its owner's information",
                "tags": [
                    "vehicles"
                ],
                "summary": "Get a vehicle by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Vehicle ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.VehicleInfo"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "main.ClientWithVehicles": {
            "type": "object",
            "properties": {
                "contact_email": {
                    "type": "string"
                },
                "contact_name": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "number_of_vehicles": {
                    "type": "integer"
                }
            }
        },
        "main.VehicleInfo": {
            "type": "object",
            "properties": {
                "client_name": {
                    "type": "string"
                },
                "contact_email": {
                    "type": "string"
                },
                "contact_name": {
                    "type": "string"
                },
                "mileage": {
                    "type": "integer"
                },
                "vin": {
                    "type": "string"
                },
                "weights": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "bearerToken": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Simple API",
	Description:      "This is a simple API that retrieves information about clients and their vehicles.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
